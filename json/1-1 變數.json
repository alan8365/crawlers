{
    "course_info": {
        "lesson_number": "1",
        "chapter": "1",
        "name": "變數"
    },
    "course_block": [
        {
            "type": "text",
            "content": "當我們開始寫程式時，一定要先學會變數(Variable)，可以把變數想像成資料上的標籤，如果沒有標籤，就沒有辦法查詢我們需要的資料，資料可能是一串字或數字，不同種類的資料具有不同的資料型態，而變數之所以叫變數是因為可以改變它代表的資料。"
        },
        {
            "type": "subtitle",
            "content": "<h5>指派</h5>"
        },
        {
            "type": "text",
            "content": "設定變數要代表的資料，這個動作稱為指派(Assign)。"
        },
        {
            "type": "code",
            "content": "```\n變數名稱 = 變數代表的資料\n```"
        },
        {
            "type": "code",
            "content": "```python=\n>>> a = 5\n>>> a\n5\n```"
        },
        {
            "type": "text",
            "content": "我們建立了一個數字5，而a是第一次出現的變數名稱，所以會先產生a這個變數，再將數字5指派給a，就能通過呼叫a取得數字5。"
        },
        {
            "type": "text",
            "content": "如果我們呼叫一個未指派的變數，就會出現錯誤，因為它沒有指向任何一個資料，所以我們無法取得它的內容。"
        },
        {
            "type": "code",
            "content": "```python=\n>>> c\nNameError: name 'c' is not defined\n>>> #變數名稱錯誤: 變數 'c' 未被定義\n```"
        },
        {
            "type": "text",
            "content": "若給同一個變數賦予新的值，那麼此變數就會指向新的值，若沒有其他變數指向原先的值，原先的值就會被刪除，因為Python有垃圾回收功能，不會被不需要的東西佔了記憶體空間。"
        },
        {
            "type": "code",
            "content": "```python=\n>>> a = 1 \n>>> a = 2\n>>> a \n2 \n>>> a = b = c = 20 #若變數內容相同就可以同時賦值\n>>> a, b, c\n(20, 20, 20)\n>>> a, b, c = 15, 22, 64 #賦值時也可以寫在同一列\n>>> a, b, c\n(15, 22, 64)\n```"
        },
        {
            "type": "subtitle",
            "content": "<h5>變數名稱命名規則</h5>"
        },
        {
            "type": "text",
            "content": "變數名稱的第一個字元(Character)只能是英文大小寫字母，字元就是一個中文字、英文字母、數字或符號，變數名稱不能有特殊字元或空白字元，只可以使用英文大小寫字母、底線符號(_)和數字，英文字母大小寫是有分別的，Python會將之視為不同的名稱，Python 3支援含有中文字的變數名稱，但建議不要使用中文，會降低程式的可移植性，可移植性是指程式能不能在其他軟硬體平台上執行。"
        },
        {
            "type": "code",
            "content": "```python=\n>>> m = 3\n>>> M = 4\n>>> m\n3\n>>> M\n4\n>>> 愛 = 'love'\n>>> 愛\n'love'\n```"
        },
        {
            "type": "text",
            "content": "變數名稱不能與Python的內建保留字(Keyword)相同，保留字也稱作關鍵字，是具有特別作用的單字。"
        },
        {
            "type": "text",
            "content": "Python有提供當前版本的保留字列表："
        },
        {
            "type": "code",
            "content": "```python=\n>>> import keyword\n>>> keyword.kwlist\n['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']\n```"
        },
        {
            "type": "text",
            "content": "其他參見<a href='http://easycoding.nutc.edu.tw/wiki/1/1'>文件：保留字說明</a>"
        }
    ],
    "answer_block": [
        {
            "type": "text",
            "content": "執行結果："
        },
        {
            "type": "code",
            "content": "```python=\n>>> a\n253\n```"
        },
        {
            "type": "text",
            "content": "請填入正確的變數名稱："
        },
        {
            "type": "code",
            "content": "```python=\n_ = 253\n```"
        },
        {
            "type": "text",
            "content": "註：填充題內有'>>>'提示符號的是在互動交談模式中，沒有提示符號的是在程式碼檔案中。"
        },
        {
            "type": "text",
            "content": "答案：a"
        }
    ]
}